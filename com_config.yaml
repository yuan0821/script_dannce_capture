
# Degree of downsampling applied to image input. Default 4
downfac: 4
# Video file extension
extension: '.avi'
io_config: 'io.yaml'
# How to crop the input images. For labeling, this is not strictly required
crop_height: [0, 2560]
crop_width: [0, 2560]
# Number of channels for each input image (e.g. RGB == 3)
# n_channels_in: 3
mono: True


######################################################################### COM 
# if you use 5-cam-pre, then set 5; if use 3-cam-pre, then set 3; if use 6-cam-pre, then set 6.
# for now: cameras--4
n_views: 5
# Number of network output channels.
n_channels_out: 1


# BATCH_SIZE*len(camnames) should be <= 6 for most COM training applications
# 相机数量增加，size 减小；downfac倍数增加，size 增加。
batch_size: 1
# training option. Sets the size of the 3D Guassians (in mm) used as labels for the MAX models
sigma: 30
# training option. Sets the number of epochs during training
# if timepoint labled > 100，then set 100-200 is ok
epochs: 1200


# DANNCE training option. Sets the verbosity of training output
verbose: 1

# DANNCE training option. Loss function to be used. Default MSE.
loss: mask_nan_keep_loss

# DANNCE training option. Learning rate for the Adam optimizer. Default 1e-3.
lr: 5e-3

# name of the network architecture (see nets.py)
net: unet2d_fullbn

# If true, each camera's video directory contains only the video files. If false, each camera's video directory contains an additional subdirectory, which then contains the video files
vid_dir_flag: False
# training. Metric to be monitored in addition to loss
metric: mse

# How many samples from each animal do you want to (randomly) set aside for a validation metric? > 100 timepoints
num_validation_per_exp: 0

# If true, saves plots of the training labels overlaid on images
debug: False

# When using a system with multiple GPUs, we should just target one ofthem
gpu_id: "0"

# If present, write the confidence map output and image/COM overlays to disk during prediction
# COMdebug: CameraLmouse
# How many frames to you want to predict over? Set to 'max' for all video frames.
start_sample: 0
max_num_samples: 'max'

# Use this to select between downsampling modes. 'dsm' is the original (slow) downsample local mean, 'nn' is fast nearest neighbors
dsmode: nn




# slurm_config: /n/holylfs02/LABS/olveczky_lab/Diego/code/dannce/cluster/holyoke.yaml
